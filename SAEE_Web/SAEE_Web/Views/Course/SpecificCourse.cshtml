@model SAEE_Web.Entities.ViewModelCourse_Task

@{
    ViewBag.Title = "SpecificCourse";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@foreach (var item in Model.EnrolledCourses)
{
    if (item.WeekNum == (int)Session["SelectedWeekNum"])
    {
        <br />
        <div style="margin-left:15%;">
            <h3> @item.CourseName || @item.CourseSchedule</h3>
        </div>
    }
}


<div style="width: 70%; text-align: center; margin-left: auto; margin-right: auto; margin-bottom: 20px; ">
    <br />
    @* SECONDARY NAV *@
    <nav class="navbar navbar-expand-lg navbar-light bg-light" style="display:flex; justify-content:flex-start;">
        @foreach (var item in Model.EnrolledCourses)
        {
            if (item.WeekNum == 0)
            {
                <a class="navbar-brand choicebtn" href="#" onclick="updateSessionWeek(0, @item.WeekId, 0)">Introducción</a>
            }
            else
            {
                <a class="navbar-brand choicebtn" href="#" onclick="updateSessionWeek(@item.WeekNum, '@item.WeekId', 0)">Semana @item.WeekNum</a>
            }
        }
    </nav>

    @* Content *@
    <div id="content-container">
        @foreach (var item in Model.EnrolledCourses)
        {
            if (item.WeekNum == (int)Session["SelectedWeekNum"])
            {
                <div class="list-group">
                    <div class="list-group-item list-group-item-action active">
                        <div class="d-flex w-100 justify-content-between">
                            <h2 class="mb-1">@item.Header</h2>
                        </div>
                        <p class="mb-1"></p>
                    </div>
                    @if (item.WeekNum == 0)
                    {
                        Session["SelectedWeekId"] = item.WeekId;

                        <div class="list-group-item list-group-item-action">
                            <div class="d-flex w-100 justify-content-between">
                                <h4 class="mb-1">@item.TechearName</h4>
                            </div>
                            <div class="d-flex w-100 justify-content-end" style="flex-direction:column;align-items:flex-start;">
                                <p class="mb-1" style="font-weight:bold;">Acerca del profesor:</p>
                                <p class="mb-1">@item.TeacherSpecialty</p>
                                <p class="mb-1">@item.TeacherExperience años de experiencia</p>
                            </div>
                        </div>

                        <div class="list-group-item list-group-item-action">
                            <div class="d-flex w-100 justify-content-between">
                                <h4 class="mb-1">Información del curso:</h4>
                            </div>
                            <div class="d-flex w-100 justify-content-end" style="flex-direction:column;align-items:flex-start;">
                                <p class="mb-1">@item.CourseDescription</p>
                                <p class="mb-1">Horario: @item.CourseSchedule</p>
                                <p class="mb-1">Programa del curso (Ejemplo Descargas)</p> @*Seran descargas*@
                                <p class="mb-1">Indicaciones Proyecto final (Ejemplo Descargas)</p> @*Seran descargas*@
                            </div>
                        </div>

                        <div class="list-group-item list-group-item-action">
                            <div class="d-flex w-100 justify-content-between">
                                <h4 class="mb-1">Tareas:</h4>
                            </div>
                            <div class="d-flex w-100 justify-content-end" style="flex-direction:column;align-items:flex-start;">
                                @if (Model.CourseAssignments.Count() <= 0)
                                {
                                    //Permitirle al profesor agregar una tarea acá
                                    <p class="mb-1">No hay tareas pendientes.</p>
                                }
                                else
                                {
                                    foreach (var assignment in Model.CourseAssignments)
                                    {
                                        if (assignment.AssignmentWeek == item.WeekId)
                                        {
                                            //Permitirle al profesor editar o inactivar una tarea acá
                                            //Se puede validar que sea profesor con la variable de session del rol
                                            //Tambien acá se puede validar que a estudiantes solo se le muestren las tareas activas
                                            <p class="mb-1">Subir @assignment.AssignmentName</p>

                                            <div style="text-align:left">
                                                <a class="btn btn--rAdd" style="display:flex; height:40px" onclick="updateSessionWeek(@item.WeekNum, '@item.WeekId', '@assignment.AssignmentId')" href="@Url.Action("RegisterCourseTasks","CourseTasks")">
                                                    <span class="text">Agregar Tarea</span>
                                                </a>
                                            </div>
                                            <br />
                                        }
                                    }
                                }
                            </div>
                        </div>

                    }
                    else
                    {
                        <div class="list-group-item list-group-item-action">
                            <div class="d-flex w-100 justify-content-between">
                                <h4 class="mb-1">Contenido:</h4>
                            </div>
                            <div class="d-flex w-100 justify-content-end" style="flex-direction:column;align-items:flex-start;">
                                <p class="mb-1">@item.Content</p>
                            </div>
                        </div>

                        <div class="list-group-item list-group-item-action">
                            <div class="d-flex w-100 justify-content-between">
                                <h4 class="mb-1">Descargas:</h4>
                            </div>
                            <div class="d-flex w-100 justify-content-end" style="flex-direction:column;align-items:flex-start;">
                                <p class="mb-1">Programa del curso (Ejemplo Descargas)</p> @*Seran descargas*@
                                <p class="mb-1">Indicaciones Proyecto final (Ejemplo Descargas)</p> @*Seran descargas*@
                            </div>
                        </div>

                        <div class="list-group-item list-group-item-action">
                            <div class="d-flex w-100 justify-content-between">
                                <h4 class="mb-1">Tareas:</h4>
                            </div>
                            <div class="d-flex w-100 justify-content-end" style="flex-direction:column;align-items:flex-start;">
                                @if (Model.CourseAssignments.Count() <= 0)
                                {
                                    //Permitirle al profesor agregar una tarea acá - Es un insert a la tabla CourseAssignements
                                    //Se puede utilizar la variable de session con el weekId para el insert...
                                    //Es importante antes de enviar el formulario, actualizar dicha variable de session
                                    //Con el evento onclick creado
                                    <p class="mb-1">No hay tareas pendientes.</p>
                                }
                                else
                                {
                                    foreach (var assignment in Model.CourseAssignments)
                                    {
                                        if (assignment.AssignmentWeek == item.WeekId)
                                        {
                                            //Permitirle al profesor agregar una tarea acá - Es un insert a la tabla CourseAssignements
                                            //Se puede utilizar la variable de session con el weekId para el insert...
                                            //Es importante antes de enviar el formulario, actualizar dicha variable de session
                                            //Con el evento onclick creado

                                            //Permitirle al profesor editar o inactivar una tarea acá (tambien se puede usar la session)
                                            //Se puede validar que sea profesor con la variable de session del rol
                                            //Tambien acá se puede validar que a estudiantes solo se le muestren las tareas activas
                                            <p class="mb-1">Subir @assignment.AssignmentName</p>

                                            <div style="text-align:left">
                                                <a class="btn btn--rAdd" style="display:flex; height:40px" onclick="updateSessionWeek(@item.WeekNum, '@item.WeekId', '@assignment.AssignmentId')" href="@Url.Action("RegisterCourseTasks","CourseTasks")">
                                                    <span class="text">Agregar Tarea</span>
                                                </a>
                                            </div>
                                            <br />
                                        }
                                    }
                                }
                            </div>
                        </div>
                    }
                </div>
            }
        }
    </div>
</div>

<script>
    function updateSessionWeek(weekNum, weekId, assignmentId) {
    fetch('@Url.Action("UpdateSessionWeek", "Enrolled")', {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            weekNum: weekNum,
            weekId: weekId, 
            assignmentId: assignmentId
        })
    })
    .then(response => {
        if (!response.ok) {
            throw new Error('Network response was not ok');
        }
        return response.json();
    })
    .catch(error => {
        console.error('There was a problem with your fetch operation:', error);
    });
    }


    // Función para recargar la página
    function reloadPage() {
        location.reload();
    }
    var reloadButtons = document.getElementsByClassName('choicebtn');
    for (var i = 0; i < reloadButtons.length; i++) {
        reloadButtons[i].addEventListener('click', reloadPage);
    }
</script>
